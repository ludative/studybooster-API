# import * from "./schema/interfaces/index.graphql"
# import * from "./schema/inputs/index.graphql"
# import * from "./schema/enums/index.graphql"
# import * from "./schema/users.graphql"
# import * from "./schema/studies.graphql"
# import * from "./schema/common.graphql"
# import * from "./schema/studyBoard.graphql"
# import * from "./schema/studyMember.graphql"

type Query {
  getUsers: GetUsers
  getUserById(id: Int!): User
  getStudyBoards: GetStudyBoards
  getStudyBoardById(id: Int!): StudyBoard
  getStudyBoardsByCategory(category: StudyBoardCategory): GetStudyBoards
  getStudyMembers(paginationParams: PaginationInput, params: GetStudyMemberInput, studyId: Int!): GetStudyMember
}

type Mutation {
  signUp(params: UserInput): User!
  signIn(email: String!, password: String!): UserWithToken
  updateUser(params: UserInput): User!
  createStudy(params: StudyInput): Study
  sendMailValidation: Success
  updatePassword(password: String!, newPassword: String!): User!
  resetPassword(email: String!): Success
  deleteUser: Success
  createStudyBoard(params: StudyBoardInput): StudyBoard
  deleteStudyBoard(id: Int!): Success
  updateStudyBoard(params: StudyBoardInput): StudyBoard
  createMember(studyId: Int!): StudyMember
  updateMember(params: [StudyMemberInput], studyId: Int!): [StudyMember]
  deleteMember(studyId: Int!): Success
}
